import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

public class SwingATM implements ActionListener{
	
	int balamt = 5000;
	int statements[]= new int[10];
	int i=0;
	JButton[] buttons = new JButton[10];
	JFrame window = new JFrame("ATM");
	JButton withdraw;
	JButton deposit;
	JButton balance;
	JButton transac;
	JButton clear;
	JButton delete;
	JTextField textfield;
	public SwingATM(){
		
		window.setBounds(400, 100, 400, 630);
		window.getContentPane().setBackground(Color.GREEN);
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		for(int i=0;i<10;i++) {
			buttons[i] = new JButton(String.valueOf(i));
			buttons[i].setFocusable(false);
			buttons[i].setBackground(Color.BLACK);
			buttons[i].setForeground(Color.YELLOW);
			buttons[i].setFont(new Font("Arial", Font.BOLD, 50));
		}
		
		withdraw = new JButton("Withdraw");
		withdraw.setFocusable(false);
		withdraw.setBackground(Color.BLACK);
		withdraw.setForeground(Color.YELLOW);
		withdraw.setFont(new Font("Consolas", Font.BOLD, 25));
		withdraw.setBounds(5, 480, 185, 50);
		
		deposit = new JButton("Deposit");
		deposit.setFocusable(false);
		deposit.setBackground(Color.BLACK);
		deposit.setForeground(Color.YELLOW);
		deposit.setFont(new Font("Consolas", Font.BOLD, 25));
		deposit.setBounds(195, 480, 185, 50);
		
		balance = new JButton("Balance");
		balance.setFocusable(false);
		balance.setBackground(Color.BLACK);
		balance.setForeground(Color.YELLOW);
		balance.setFont(new Font("Consolas", Font.BOLD, 25));
		balance.setBounds(5, 535, 185, 50);	// 5 535 185 50
		
		transac = new JButton("Transactions");
		transac.setFocusable(false);
		transac.setBackground(Color.BLACK);
		transac.setForeground(Color.YELLOW);
		transac.setFont(new Font("Consolas", Font.BOLD, 20));
		transac.setBounds(195, 535, 185, 50);		// 260 425 121 50
		
		clear = new JButton("clear");
		clear.setFocusable(false);
		clear.setBackground(Color.BLACK);
		clear.setForeground(Color.YELLOW);
		clear.setFont(new Font("Consolas", Font.BOLD, 20));
		clear.setBounds(10, 425, 121, 50);
		
		delete = new JButton("delete");
		delete.setFocusable(false);
		delete.setBackground(Color.BLACK);
		delete.setForeground(Color.YELLOW);
		delete.setFont(new Font("Consolas", Font.BOLD, 20));
		delete.setBounds(260, 425, 121, 50);	
		
		withdraw.addActionListener(this);
		deposit.addActionListener(this);
		balance.addActionListener(this);
		transac.addActionListener(this);
		clear.addActionListener(this);
		delete.addActionListener(this);
		
		buttons[7].setBounds(10, 110, 121, 100);
		buttons[8].setBounds(135, 110, 121, 100);
		buttons[9].setBounds(260, 110, 121, 100);
		buttons[4].setBounds(10, 215, 121, 100);
		buttons[5].setBounds(135, 215, 121, 100);
		buttons[6].setBounds(260, 215, 121, 100);
		buttons[1].setBounds(10, 320, 121, 100);
		buttons[2].setBounds(135, 320, 121, 100);
		buttons[3].setBounds(260, 320, 121, 100);
		buttons[0].setBounds(135, 425, 121, 50);
		
		textfield = new JTextField("");
		textfield.setBounds(10, 5, 365, 100);
		textfield.setBackground(Color.BLACK);
		textfield.setForeground(Color.GREEN);
		textfield.setFont(new Font("Roman", Font.BOLD, 17));
		textfield.setEditable(false);
		
		for(int i=0;i<10;i++) {
			final int num = i;
			buttons[i].addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent e) {
					textfield.setText(textfield.getText()+String.valueOf(num));
				}
			});
		}
		
		window.setLayout(null);
		window.add(textfield);
		for(int i=0;i<10;i++) {
			window.add(buttons[i]);
		}
		window.add(deposit);
		window.add(balance);
		window.add(withdraw);
		window.add(transac);
		window.add(clear);
		window.add(delete);
		window.setVisible(true);
	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource()==deposit) {
			int num = Integer.parseInt(textfield.getText());
			if(i>=10) {
				ClearTransactions();}
			this.balamt += num;
			textfield.setText("You have deposited the amount ₹" + String.valueOf(num));
			statements[i] = num;
			i++;
		}
		
		else if (e.getSource()==withdraw) {
			int tmp=Integer.parseInt(textfield.getText());
			if( tmp > this.balamt) {
				JOptionPane.showMessageDialog(window, "Insufficient funds to withdraw");
				textfield.setText("");
			}else {
				if(i>=10) {
					ClearTransactions();}
				int num = Integer.parseInt(textfield.getText());
				this.balamt -= num;
				textfield.setText("You have withdrawed the amount ₹" + String.valueOf(num));
				statements[i] = num *-1;
				i++;}
		}
		
		else if (e.getSource()==balance) {
			textfield.setText("You have the balance of ₹" + String.valueOf(this.balamt));
		}
		
		else if(e.getSource()==transac) {
			if(i==0) {
				textfield.setText("No transactions recorded yet.");
			}else {
			StringBuilder transactions = new StringBuilder("Your transactions are \n");
			for(int j=0;j<i;j++) {
				transactions.append(j+1).append(". ₹").append(statements[j]).append("\n");
			}textfield.setText(transactions.toString());}
			}
		else if(e.getSource()==clear) {
			textfield.setText("");
		}
		
		else if(e.getSource()==delete) {
			if(textfield.getText().isEmpty()==true) {
				textfield.setText("");
			}else {
				Delete();
			}
		}
	}
	void ClearTransactions(){
		for(int i=0;i<10;i++) {
			statements[i]=0;
		}
	}
	void Delete(){
		String num = textfield.getText();
		int strlen = num.length();
		String newnum;
		newnum = num.substring(0, strlen-1);
		textfield.setText(newnum);
	}
}

public class Main extends SwingATM{
	public static void main(String[] args) {
		SwingATM atm = new SwingATM();
	}
}
